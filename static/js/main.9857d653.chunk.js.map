{"version":3,"sources":["utils/utils.js","components/Linewriter.js","components/Typewriter.js","components/Logo.js","components/Topbar.js","views/App.js","index.js"],"names":["ALLOWED_TAGS","getFormattedLine","line","formattedLine","i","length","tag","regex","RegExp","matches","match","start","mid","end","rel","target","href","color","getElementKey","prefix","Date","getTime","Linewriter","timeoutId","undefined","linePrefix","state","charIndex","nextLetter","props","handleFinish","setState","prevState","split","map","_","speed","this","setInterval","prevProps","clearInterval","cursor","outputLine","replace","removeTags","leadingSpaces","className","substr","React","Typewriter","speedDivider","finished","sectionIndex","lineIndex","writtenLines","sections","lines","handleTouchEnd","e","handleKeyPress","key","document","addEventListener","section","writtenLine","Math","floor","Logo","url","aria-label","viewBox","aria-hidden","d","fill","Topbar","title","showLogo","logoUrl","App","filter","minScreenWidth","window","innerWidth","maxScreenWidth","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9857d653.chunk.js","sourcesContent":["import * as React from 'react'\n\nconst ALLOWED_TAGS = [\n  'bold',\n  'email',\n  'green',\n  'blue',\n  'italic',\n  'underscore',\n  'url',\n]\n\nconst hasTags = line => {\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`^(.*)(\\\\[${tag}\\\\])(.*)(\\\\[/${tag}\\\\])(.*)$`)\n    const matches = line.match(regex)\n    if (matches && matches.length === 6) {\n      return true\n    }\n  }\n  return false\n}\n\nconst getFormattedLine = line => {\n  let formattedLine = line\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`^(.*)(\\\\[${tag}\\\\])(.*)(\\\\[/${tag}\\\\])(.*)$`)\n    const matches = line.match(regex)\n    if (matches && matches.length === 6) {\n      const start = getFormattedLine(matches[1])\n      const mid = getFormattedLine(matches[3])\n      const end = getFormattedLine(matches[5])\n\n      if (tag === 'bold') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <strong>{mid}</strong>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'url') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={matches[3]}>\n              {mid}\n            </a>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'email') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href={`mailto:${matches[3]}`}\n            >\n              {mid}\n            </a>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'italic') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <i>{mid}</i>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'underscore') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <u>{mid}</u>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'green') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <font color=\"#20C20E\">{mid}</font>\n            {end}\n          </React.Fragment>\n        )\n      } else if (tag === 'blue') {\n        formattedLine = (\n          <React.Fragment>\n            {start}\n            <font color=\"#3399ff\">{mid}</font>\n            {end}\n          </React.Fragment>\n        )\n      }\n    }\n  }\n  return formattedLine\n}\n\nconst removeTags = line => {\n  let formattedLine = line\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`\\\\[/?${tag}\\\\]`, 'gi')\n    formattedLine = formattedLine.replace(regex, '')\n  }\n  return formattedLine\n}\n\nconst getElementKey = prefix => `${prefix}_${new Date().getTime()}`\n\nexport { getElementKey, getFormattedLine, hasTags, removeTags }\n","import * as React from 'react'\nimport { getFormattedLine, removeTags } from '../utils/utils'\n\nclass Linewriter extends React.Component {\n  timeoutId = undefined\n\n  linePrefix = getFormattedLine(\n    '[green][bold]âžœ[/bold][/green] [blue][bold]~[/bold][/blue] '\n  )\n\n  state = {\n    charIndex: 0,\n  }\n\n  componentDidMount() {\n    const { speed } = this.props\n    this.timeoutId = setInterval(() => this.nextLetter(), speed)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { handleFinish, line, speed } = this.props\n    const { charIndex } = this.state\n    if (speed === 0) {\n      handleFinish(getFormattedLine(line))\n    } else if (!line.length) {\n      clearInterval(this.timeoutId)\n      this.timeoutId = setInterval(() => this.nextLetter(), 200)\n    } else if (!prevProps.line.length && charIndex === 0) {\n      clearInterval(this.timeoutId)\n      this.timeoutId = setInterval(() => this.nextLetter(), speed)\n    } else if (\n      speed !== prevProps.speed ||\n      prevState.charIndex === prevProps.line.length - 1\n    ) {\n      clearInterval(this.timeoutId)\n      this.timeoutId = setInterval(() => this.nextLetter(), speed)\n    } else if (charIndex === line.length - 1) {\n      clearInterval(this.timeoutId)\n      this.timeoutId = setInterval(() => this.nextLetter(), 0)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeoutId)\n  }\n\n  nextLetter = () => {\n    const { charIndex, formattedLine } = this.state\n    const { line, handleFinish, prefix } = this.props\n    const prefixedLine = `${prefix ? '> ' : ''}${line}`\n\n    if (!line.length) {\n      handleFinish(\n        <React.Fragment>\n          {prefix && this.linePrefix}\n          {line.split(/^(\\s*)/).length === 3 &&\n            line\n              .split(/^(\\s*)/)[1]\n              .split('')\n              .map(_ => <span>&nbsp;</span>)}\n          {getFormattedLine(line)}\n        </React.Fragment>\n      )\n    } else if (charIndex < line.length - 1) {\n      this.setState(prevState => ({\n        charIndex: prevState.charIndex + 1,\n        ...{\n          ...(charIndex === 0 && {\n            formattedLine: prefix ? (\n              <React.Fragment>\n                {this.linePrefix}\n                {line.split(/^(\\s*)/).length === 3 &&\n                  line\n                    .split(/^(\\s*)/)[1]\n                    .split('')\n                    .map(_ => <span>&nbsp;</span>)}\n                {getFormattedLine(line)}\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {line.split(/^(\\s*)/).length === 3 &&\n                  line\n                    .split(/^(\\s*)/)[1]\n                    .split('')\n                    .map(_ => <span>&nbsp;</span>)}\n                {getFormattedLine(line)}\n              </React.Fragment>\n            ),\n          }),\n        },\n      }))\n    } else {\n      this.setState({\n        charIndex: 0,\n        formattedLine: undefined,\n      })\n      handleFinish(formattedLine)\n    }\n  }\n\n  render() {\n    const { charIndex } = this.state\n    const { cursor, line, prefix } = this.props\n    const outputLine = removeTags(line)\n    const leadingSpaces = outputLine.split(/^(\\s*)/).length === 3\n    // const outputLine = line\n    return (\n      <div className=\"terminal__line\">\n        {prefix && this.linePrefix}\n        {leadingSpaces &&\n          outputLine\n            .split(/^(\\s*)/)[1]\n            .split('')\n            .map(_ => <span>&nbsp;</span>)}\n        {`${outputLine.substr(0, charIndex)}`}\n        {cursor && <span className=\"cursor\">&nbsp;</span>}\n      </div>\n    )\n  }\n}\n\nexport default Linewriter\n","import * as React from 'react'\nimport { getElementKey } from '../utils/utils'\nimport Linewriter from './Linewriter'\n\nclass Typewriter extends React.Component {\n  timeoutId = undefined\n\n  prefix = '> '\n\n  speedDivider = 1\n\n  state = {\n    finished: false,\n    sectionIndex: 0,\n    lineIndex: 0,\n    writtenLines: [],\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false)\n    document.addEventListener('touchend', this.handleTouchEnd, false)\n  }\n\n  handleFinish = line => {\n    const { lineIndex, sectionIndex } = this.state\n    const { sections } = this.props\n    const { lines } = sections[sectionIndex]\n    if (lineIndex < lines.length - 1) {\n      this.setState(prevState => ({\n        writtenLines: [...prevState.writtenLines, line],\n        lineIndex: prevState.lineIndex + 1,\n      }))\n    } else if (sectionIndex < sections.length - 1) {\n      this.setState(prevState => ({\n        writtenLines: [...prevState.writtenLines, line],\n        lineIndex: 0,\n        sectionIndex: prevState.sectionIndex + 1,\n      }))\n    } else if (\n      sectionIndex === sections.length - 1 &&\n      lineIndex === lines.length - 1\n    ) {\n      this.setState(prevState => ({\n        finished: true,\n        writtenLines: [...prevState.writtenLines, line],\n      }))\n    }\n  }\n\n  handleTouchEnd = e => {\n    if (this.speedDivider > 0.0625) {\n      this.speedDivider = this.speedDivider * 0.5\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      if (this.speedDivider > 0.0625) {\n        this.speedDivider = this.speedDivider * 0.5\n      }\n    }\n  }\n\n  render() {\n    const { sections } = this.props\n    const { finished, lineIndex, sectionIndex, writtenLines } = this.state\n    const section = sections[sectionIndex]\n    const { lines, speed } = section\n    const line = lines[lineIndex]\n    const prefix = 'prefix' in section && section.prefix\n\n    return (\n      <div className=\"terminal\">\n        {writtenLines.map((writtenLine, i) => (\n          <div\n            key={getElementKey(`${writtenLine}_${i}`)}\n            className=\"terminal__line\"\n          >\n            {writtenLine}\n          </div>\n        ))}\n        {!finished && (\n          <Linewriter\n            cursor={!('cursor' in section) || section.cursor}\n            handleFinish={this.handleFinish}\n            line={line}\n            speed={speed > 0 ? Math.floor(this.speedDivider * speed) : speed}\n            prefix={prefix}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Typewriter\n","import * as React from 'react'\n\nconst Logo = ({ url }) => (\n  <a href={url} aria-label=\"View source on GitHub\">\n    <svg className=\"topbar__logo__svg\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </a>\n)\n\nexport default Logo\n\n/*\n* The MIT License (MIT)\n* \n* Copyright (c) 2016 Tim Holman\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n","import * as React from 'react'\nimport Logo from './Logo'\n\nconst Topbar = ({ title = 'ekern.me', showLogo, logoUrl }) => (\n  <div className=\"topbar\">\n    <div className=\"topbar__title\">{title}</div>\n    {showLogo &&\n      logoUrl && (\n        <div className=\"topbar__logo\">\n          <Logo url={logoUrl} />\n        </div>\n      )}\n  </div>\n)\n\nexport default Topbar\n","import React from 'react'\nimport sections from '../assets/json/sections.json'\nimport Typewriter from '../components/Typewriter'\nimport Topbar from '../components/Topbar'\n\nconst App = () => (\n  <div className=\"app\">\n    <Topbar\n      title=\"ekern.me\"\n      showLogo\n      logoUrl=\"https://github.com/stekern/cmdkern\"\n    />\n    <Typewriter\n      sections={sections.filter(\n        section =>\n          (!('minScreenWidth' in section) ||\n            section.minScreenWidth <= window.innerWidth) &&\n          (!('maxScreenWidth' in section) ||\n            section.maxScreenWidth >= window.innerWidth)\n      )}\n    />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/App'\nimport './assets/css/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}