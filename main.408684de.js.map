{"mappings":"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","sources":["./src/util.js","./src/assets/json/sections.json","./src/main.js","./Users/erlend/Documents/GitHub/web/cmdkern/node_modules/@parcel/scope-hoisting/lib/helpers.js"],"sourcesContent":["const ALLOWED_TAGS = [\n  'bold',\n  'email',\n  'green',\n  'red',\n  'blue',\n  'italic',\n  'underscore',\n  'url',\n]\n\nexport const hasTags = (line) => {\n  // Check if a given line contains any valid tags\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`^(.*)(\\\\[${tag}\\\\])(.*)(\\\\[/${tag}\\\\])(.*)$`)\n    const matches = line.match(regex)\n    if (matches && matches.length === 6) {\n      return true\n    }\n  }\n  return false\n}\n\nexport const getDisplayText = (line) => {\n  // Return the text (without tags) to display when typewriting\n  let formattedLine = line\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`\\\\[/?${tag}\\\\]`, 'gi')\n    formattedLine = formattedLine.replace(regex, '')\n  }\n  return formattedLine\n}\nexport const getFormattedText = (line) => {\n  // Return the final innerHTML that will be used to represent a line after typewriting\n  let formattedLine = line\n  for (let i = 0; i < ALLOWED_TAGS.length; i++) {\n    const tag = ALLOWED_TAGS[i]\n    const regex = new RegExp(`^(.*)(\\\\[${tag}\\\\])(.*)(\\\\[/${tag}\\\\])(.*)$`)\n    const matches = line.match(regex)\n    if (matches && matches.length === 6) {\n      const start = getFormattedText(matches[1])\n      const mid = getFormattedText(matches[3])\n      const end = getFormattedText(matches[5])\n      if (tag === 'bold') {\n        formattedLine = `${start}<strong>${mid}</strong>${end}`\n      } else if (tag === 'url') {\n        formattedLine = `${start}<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"${mid}\">${mid}</a>${end}`\n      } else if (tag === 'email') {\n        formattedLine = `${start}<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"mailto:${mid}\">${mid}</a>${end}`\n      } else if (tag === 'green') {\n        formattedLine = `${start}<font color='lightgreen'>${mid}</font>${end}`\n      } else if (tag === 'blue') {\n        formattedLine = `${start}<font color='lightblue'>${mid}</font>${end}`\n      } else if (tag === 'red') {\n        formattedLine = `${start}<font color='lightpink'>${mid}</font>${end}`\n      } else if (tag === 'underscore') {\n        formattedLine = `${start}<u>${mid}</u>${end}`\n      }\n    }\n  }\n  return formattedLine\n}\n","[\n  {\n    \"endDelay\": 1500,\n    \"showPrompt\": false,\n    \"lines\": [\n      \" \"\n    ]\n  },\n  {\n    \"lines\": [\n      \"open [green]bio[/green].txt\"\n    ]\n  },\n  {\n    \"endDelay\": 750,\n    \"showPrompt\": false,\n    \"lines\": [\n      \" \"\n    ]\n  },\n  {\n    \"charDelay\": 7,\n    \"endDelay\": 150,\n    \"showCursor\": false,\n    \"lines\": [\n      \"[green]-----[/green]\",\n      \"Hey üëã I'm [bold]Erlend[/bold].\",\n      \"I'm currently working at Capra Consulting as an [bold]infrastructure engineer[/bold].\",\n      \"I have a wide span of technical interests -- currently focused on [bold]cloud ‚òÅÔ∏è[/bold], [bold]DevOps üë∑[/bold], [bold]AI ü§ñ[/bold] and [bold]full-stack web development üíª[/bold].\",\n      \"I obtained my M.Sc. in [bold]Computer Science[/bold] with a specialization in [bold]Artificial Intelligence[/bold] from the Norwegian University of Science and Technology in 2019.\"\n    ],\n    \"showPrompt\": false\n  },\n  {\n    \"showPrompt\": false,\n    \"lines\": [\n      \"\",\n      \"\"\n    ]\n  },\n  {\n    \"lines\": [\n      \"open [red]contact[/red].txt\"\n    ]\n  },\n  {\n    \"endDelay\": 750,\n    \"showPrompt\": false,\n    \"lines\": [\n      \" \"\n    ]\n  },\n  {\n    \"showPrompt\": false,\n    \"showCursor\": false,\n    \"charDelay\": 7,\n    \"endDelay\": 150,\n    \"lines\": [\n      \"[red]-----[/red]\",\n      \"Email: [email]erlend@ekern.me[/email]\",\n      \"LinkedIn: [url]https://linkedin.com/in/erlendekern[/url]\",\n      \"Twitter: [url]https://twitter.com/erlendekern[/url]\",\n      \"GitHub: [url]https://github.com/stekern[/url]\",\n      \"Keybase: [url]https://keybase.io/ekern[/url]\"\n    ]\n  },\n  {\n    \"showPrompt\": false,\n    \"minScreenWidth\": 768,\n    \"lines\": [\n      \"\",\n      \"\"\n    ]\n  },\n  {\n    \"minScreenWidth\": 768,\n    \"lines\": [\n      \"./png_to_ascii.sh [green]picture[/green].png\"\n    ]\n  },\n  {\n    \"minScreenWidth\": 768,\n    \"endDelay\": 750,\n    \"showPrompt\": false,\n    \"lines\": [\n      \" \"\n    ]\n  },\n  {\n    \"minScreenWidth\": 768,\n    \"showPrompt\": false,\n    \"charDelay\": 0,\n    \"endDelay\": 0,\n    \"lines\": [\n      \"[green]-----[/green]\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmNmmdmdmNNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMNmmdhyo//+ssosoohdmmmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMd::/+o::os/-:++:-//oohyhMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMh-....----:/:.----..--:/oMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMm+.`````..---....-://:://:/dMMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMm+-.``...-:/+oosyhdmmddhhddhsmMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMmy-.`.//+osyhmmNNMMNNNmmmmmdyyNMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMy..:+syyhhdmmmmmmmmmmddmmmyoyMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMh../syhhhhhddddddmmmdddddho//mMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMd../syhdddmmmmmmmmmmmmNmmho:.sMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMNh..+oyhdhysoossyssoosyhhhdy+-+hNMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMh+/-sso+/:----:+s+:--..-:/sdh/+oNMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMm+//ys+/:::::-:yNh/::/+osyhdmy+hMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMNs/ssyhhhysssssdMmhyhhdmmmmddyhdMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMhyooyddmNNNdyymNNdhhmNNmmmdyohNMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMNds+syhhdddyosoyyososyhysosodNMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMy++ooosoo+:-:--:ss/+++/+oMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMN+++++/:/+-.---://-:o++/sMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMh//++:-:::::///++++++/-dMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMy:/++++++////osyys+:-/mMMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMd/:/ossssossyhhs+:.:sdNMMMMMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMd:-://++/////:---/shdmMdmNMMMMMMMMMMMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMMNs/:-.........-/+syhmNMy/oyhhdmmNNNNMMMMMMMMMMM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMMMMNNds++//::--:/+oosyhmNMMm-::::://+oosyhhdmNNNNNM\",\n      \"MMMMMMMMMMMMMMMMMMMMMMMMNmy/hmmhs++++++oooosydNNMNNm.-:::-.--:::///+ooosyyh\",\n      \"MMMMMMMMMMMMMMMMMMMMNmhs/-.`-hdmmdys+++++oydNNNNNmNm---:::-..-----::::::::/\",\n      \"MMMMMMMMMMMMMMMMNmhs+:-...```+mddmmmmh+-omNNNNNNNNmm/.-::::-....-----------\",\n      \"MMMMMMMMMMMMMNdy+:--......```-hmmmmmh-..-/yNNNNMNNMMs...--...........---...\",\n      \"MMMMMMMMMNmhs+:--........````-ydNNmd:-.-::-odNMMNMMMh......--..`....``.....\",\n      \"MMMMMNmdyo/:---.......`.`````-NNNNmyys:-.-/dhhdNNNNNm....-..-...`...````...\",\n      \"MMMMd+----...............```..dNNddNm+-..-/oNNNNMMMMN-.-...........`````...\",\n      \"MMMM+-....................``..hNNNNNh/-`-+/:NNMMMMMMN/..............`````..\"\n    ]\n  }\n]\n","import { hasTags, getDisplayText, getFormattedText } from './util.js'\nimport sections from './assets/json/sections.json'\n\n// Defaults\nconst CHAR_DELAY = 20\nconst START_DELAY = 0\nconst END_DELAY = 300\nconst SHOW_PROMPT = true\nconst SHOW_CURSOR = true\nconst MIN_SCREEN_WIDTH = Number.NEGATIVE_INFINITY\nconst PROMPT = \"<font color='white'><strong>üöÄ ~  </strong>\"\n\n// On load\ndocument.addEventListener('DOMContentLoaded', (e) => {\n  const terminal = document.getElementById('terminal')\n  const screenWidth = window.innerWidth\n  const formattedLines = sections\n    .filter(\n      (section) => screenWidth >= (section.minScreenWidth ?? MIN_SCREEN_WIDTH)\n    )\n    .map((section) =>\n      section.lines.map((line) => ({\n        ...section,\n        displayText: line,\n        formattedText:\n          line || (section.showPrompt ?? SHOW_PROMPT) ? line : '&nbsp',\n        ...(hasTags(line)\n          ? {\n              displayText: getDisplayText(line),\n              formattedText: getFormattedText(line),\n            }\n          : {}),\n      }))\n    )\n    .flat(1)\n  const writeLine = (i) => {\n    if (formattedLines[i]) {\n      const paragraph = document.createElement('p')\n      paragraph.innerHTML =\n        formattedLines[i].showPrompt ?? SHOW_PROMPT\n          ? formattedLines[i].prompt ?? PROMPT\n          : ''\n      terminal.appendChild(paragraph)\n      const writeChar = (j) => {\n        if (formattedLines[i].displayText[j] || j === 0) {\n          if (formattedLines[i].showCursor ?? SHOW_CURSOR) {\n            paragraph.innerHTML =\n              paragraph.innerHTML.replace('<span class=\"cursor\"></span>', '') +\n              (formattedLines[i].displayText[j] || '') +\n              '<span class=\"cursor\"></span>'\n          } else {\n            paragraph.innerHTML += formattedLines[i].displayText[j] || ''\n          }\n          setTimeout(\n            () => writeChar(j + 1),\n            formattedLines[i].charDelay ?? CHAR_DELAY\n          )\n        } else {\n          setTimeout(() => {\n            if (formattedLines[i].showCursor ?? SHOW_CURSOR) {\n              paragraph.innerHTML = paragraph.innerHTML\n                .replace('<span class=\"cursor\"></span>', '')\n                .replace(\n                  formattedLines[i].displayText,\n                  formattedLines[i].formattedText\n                )\n            } else {\n              paragraph.innerHTML = paragraph.innerHTML.replace(\n                formattedLines[i].displayText,\n                formattedLines[i].formattedText\n              )\n            }\n            writeLine(i + 1)\n          }, (formattedLines[i].startDelay ?? START_DELAY) + (formattedLines[i].endDelay ?? END_DELAY))\n        }\n      }\n      if (\n        formattedLines[i].endDelay === 0 &&\n        formattedLines[i].charDelay === 0\n      ) {\n        paragraph.innerHTML =\n          paragraph.innerHTML + formattedLines[i].formattedText\n        writeLine(i + 1)\n      } else {\n        writeChar(0)\n      }\n    }\n  }\n  writeLine(0)\n})\n",null],"names":["ALLOWED_TAGS","getDisplayText","line","formattedLine","i","length","regex","RegExp","concat","replace","getFormattedText","tag","matches","match","start","mid","end","$cd58ecfc5b8c805267fcf5b23104e8$exports","JSON","parse","a","MIN_SCREEN_WIDTH","Number","NEGATIVE_INFINITY","__esModule","default","document","addEventListener","e","terminal","getElementById","screenWidth","window","innerWidth","formattedLines","$cd58ecfc5b8c805267fcf5b23104e8$$interop$default","filter","section","_section$minScreenWid","minScreenWidth","map","lines","_section$showPrompt","$ef99d2f9528d093fb239ab68cb84c216$var$_objectSpread","displayText","formattedText","showPrompt","$e21c283ecb75cd4534689fdeb34870c$export$hasTags","$e21c283ecb75cd4534689fdeb34870c$export$getDisplayText","$e21c283ecb75cd4534689fdeb34870c$export$getFormattedText","flat","writeLine","_formattedLines$i$sho","_formattedLines$i$pro","paragraph","createElement","innerHTML","prompt","appendChild","endDelay","charDelay","writeChar","j","_formattedLines$i$sho2","_formattedLines$i$cha","_formattedLines$i$sta","_formattedLines$i$end","showCursor","setTimeout","_formattedLines$i$sho3","startDelay"],"version":3,"file":"main.408684de.js.map"}